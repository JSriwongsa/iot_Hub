plugins {
	id 'java'
	id 'idea'
	id 'eclipse'
	id 'jacoco'
	id 'org.springframework.boot' version '1.5.22.RELEASE'
	id 'io.spring.dependency-management' version "1.0.8.RELEASE"
}

defaultTasks 'clean', 'test', 'jacocoTestReport'

compileJava.options.encoding = 'UTF-8'
group = 'iot_ece448'
version = '1.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
buildDir = 'build'

repositories {
	jcenter()
}

dependencies {
	implementation(
		'org.apache.httpcomponents:fluent-hc:4.5.9',
		'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.2',
		'org.bouncycastle:bcprov-jdk15on:1.62',
		'org.bouncycastle:bcpkix-jdk15on:1.62',
		'org.springframework.boot:spring-boot-starter-web')
	testImplementation(
		'junit:junit:4.12',
		'org.springframework.boot:spring-boot-starter-test',
		'org.mockito:mockito-core:3.10.0',
		'org.mockito:mockito-junit-jupiter:2.18.0',
		'org.junit.jupiter:junit-jupiter-api:5.8.1',
		'org.junit.jupiter:junit-jupiter-params:5.8.1',
		'org.junit.jupiter:junit-jupiter-engine:5.8.1',
		)
	compileOnly('org.projectlombok:lombok:1.18.8')
	annotationProcessor('org.projectlombok:lombok:1.18.8')
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
		resources {
			srcDirs = ['src/main/resources']
		}
	}

	test {
		java {
			srcDirs = ['src/test/java']
		}
		resources {
			srcDirs = ['src/test/resources']
		}
	}
}

test {
	useJUnitPlatform()
}

task iot_sim(type: JavaExec, dependsOn: [test, jacocoTestReport]) {
	classpath sourceSets.main.runtimeClasspath
	main = 'ece448.iot_sim.Main'
	if (project.hasProperty("config"))
		args project.getProperty('config')
}

task iot_sim_ex(type: JavaExec, dependsOn: [test, jacocoTestReport]) {
	classpath sourceSets.main.runtimeClasspath
	main = 'ece448.iot_sim.Main'
	args 'simConfigEx.json'
}

task iot_hub(type: JavaExec, dependsOn: [test, jacocoTestReport]) {
	classpath sourceSets.main.runtimeClasspath
	main = 'ece448.iot_hub.Main'
}

6.times { proj ->
	task "grade_p$proj"(type: JavaExec, dependsOn: [test, jacocoTestReport]) {
		classpath sourceSets.main.runtimeClasspath
		main = "ece448.grading.GradeP$proj"
	}
}

jacoco {
	toolVersion = '0.8.5'
}
